Git Tutorial


Terms:

Term 		Definition
——————————————————————————————————
Clone 		copy file to server
Untrack 	new file
remote 		remote URL is Git's fancy way of saying "the place where your code is stored."
					That URL could be your repository on GitHub, or another user's fork, or even on a completely different server
origin		is an alias on your system for a particular remote repository

Commands:

Description					Command
—————————————————————————————————————————————————————————————————————————————————————————————
View configs 																		$ git config --list
Set user name 	        												$ git config --user.name "Darryl Weimers"
Compare between local and server								$	git diff
Show log																				$ git log
Show current state of project										$ git status
Get the latest copy from server 								$ git pull
might need to merge with your local copy
Put change aside																$ git stash
Retrieve changes put aside											$ git stash apply
Remove changes put aside												$ git stash drop
Copy file from server 													$ git clone url
Add new files 																	$ git add filename
																								$	git add filename filename




Add remote server 															$	git remote add remote-name remote-url
						e.g
																								$	git remote add origin https://github.com/user/repo.git

Set up merge tool 															$ git config --global merge.tool tkdiff
Merge code 																			$	git merge

Find out which diff tool you need to install    $ git difftool --tool-help
Set up diff tool 			 													$ git difftool --tool=tkdiff
Use git diff tool 															$ git difftool




Create a new branch:

Description																										Command
—————————————————————————————————————————————————————————————————————————————————————————————
Create and switch to a new branch on your local 						$ git checkout -b [name_of_your_new_branch]
machine

View branch 																								$ git branch
asterisk indicate your working branch												output:
																														feature/gui
																														* master


Change working branching 																		$ git checkout [name_of_your_new_branch]


Make sure you are in your new branch 												$ git push --set-upstream origin [name_of_your_new_branch]
add and commit your changes
when pushing your commits use the following



Push changes from your commit into your branch							$ git push [name_of_your_new_remote] [name_of_your_branch]



Delete a branch on your local machine 											$ git branch -d [name_of_your_new_branch]
Delete the branch from github																$ git push origin :[name_of_your_new_branch]



Set a new repository

Description																										Command
—————————————————————————————————————————————————————————————————————————————————————————————
List your existing remotes in order 														$ git remote -v
to get the name of the remote you want to change.								origin  git@github.com:USERNAME/REPOSITORY.git (fetch)
																																origin  git@github.com:USERNAME/REPOSITORY.git (push)

Change your remote's URL 																				$ git remote set-url origin https://github.com/USERNAME/REPOSITORY.git




Tip:
Type Q to exit from log

Tip
Navigate to the folder that contains your

0. Go to command line (for Mac). Note for window install git bash.
1. Change directory to your project folder
   cd directory
   Example:
   directory: C://


   meld setup
   https://yousseb.github.io/meld/
